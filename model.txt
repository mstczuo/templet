
    网络流和图论模型集

P1[HDU3574]
    可以将问题变成这样的模型：删掉一些点之后，从最上面一层无法走到最下面一层。也即将立体分割成两个平面
    建模方式是：将源点连向顶层的点，底层的点连向汇点，中间每个点向上下左右连一条边。
    对于原来每个点，进行拆点，中间的容量为代价。这样最小割就是代价。

    这样建模有一个问题就是每一列可能有多个点被割。于是需要给每个点的权值加上一个常数C，这个数大于任何最优解。
    那么选出来的点一定是一个合法的方案。

    另外一种建模方式依然需要拆点。其思想在于限制如果一个点被分割，那么其相邻位置高度为1以内的点至少有一个被分割
    那么将这个点的源点连向其相邻位置上方的点的源点，下方的点的汇点连到这个点的汇点。

P2[HDU3526]
    题目大意为，有N类物品，每类有两种厂商，有不同的价格。现在需要购买所有的N类物品
    如果第I类和第J类物品来自于不同的厂商，则需要支付C[I,J]的代价

    一个简单的建模方式是，每个物品抽象成一个点，两点之间的边为代价。一个割将点集分成两份，割边为代价。
    错误的简图方式：每个物品抽象成两个点，源到入点、出点到汇连边表示价格，两点间入到出连边表示代价
    这样会导致某个点源到入，出到汇的边都为割边。

【经典问题】最大权闭合图
    源点与正权点连边
    负权点与汇点连边
    正权点与有依赖的负权点连边
    答案就是正权点权值之和。

【经典问题】混合图的欧拉回路
    首先给有向边任意指定方向，然后反过来连一条边
    源点连入度大于出度的点，出度大于入度的点连汇点，容量为需要增加的反向边的条数。
